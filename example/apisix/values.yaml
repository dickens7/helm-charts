apisixConfig:
  apisix:
    stream_proxy:
      tcp:
        - 9100
      upd:
        - 9200
    admin_key:
      - name: admin
        key: ccuOrnnKFvyF4aA9
        role: admin
  nginx_config:
    http:
      enable_access_log: true # enable access log or not, default true
      # access_log: logs/access.log
      access_log_format: '{"remote_addr":"$remote_addr","remote_user":"$remote_user","time_local":"$time_local","http_host":"$http_host","request":"$request","status":"$status","body_bytes_sent":"$body_bytes_sent","request_time":"$request_time","http_referer":"$http_referer","http_user_agent":"$http_user_agent","upstream_addr":"$upstream_addr","upstream_status":"$upstream_status","upstream_response_time":"$upstream_response_time","request_uri":"$request_uri","request_method":"$request_method","url":"$upstream_scheme://$upstream_host$upstream_uri"}'
      access_log_format_escape: json # allows setting json or default characters escaping in variables
  plugins:                          # plugin list (sorted by priority)
    - real-ip                        # priority: 23000
    - client-control                 # priority: 22000
    - proxy-control                  # priority: 21990
    - request-id                     # priority: 12015
    - zipkin                         # priority: 12011
    - skywalking                    # priority: 12010
    #- opentelemetry                 # priority: 12009
    - ext-plugin-pre-req             # priority: 12000
    - fault-injection                # priority: 11000
    - mocking                        # priority: 10900
    - serverless-pre-function        # priority: 10000
    #- batch-requests                # priority: 4010
    - cors                           # priority: 4000
    - ip-restriction                 # priority: 3000
    - ua-restriction                 # priority: 2999
    - referer-restriction            # priority: 2990
    - csrf                           # priority: 2980
    - uri-blocker                    # priority: 2900
    - request-validation             # priority: 2800
    - openid-connect                 # priority: 2599
    - authz-casbin                   # priority: 2560
    - wolf-rbac                      # priority: 2555
    - ldap-auth                      # priority: 2540
    - hmac-auth                      # priority: 2530
    - basic-auth                     # priority: 2520
    - jwt-auth                       # priority: 2510
    - key-auth                       # priority: 2500
    - consumer-restriction           # priority: 2400
    - forward-auth                   # priority: 2002
    - opa                            # priority: 2001
    - authz-keycloak                 # priority: 2000
    - error-log-logger              # priority: 1091
    - proxy-mirror                   # priority: 1010
    - proxy-cache                    # priority: 1009
    - proxy-rewrite                  # priority: 1008
    - api-breaker                    # priority: 1005
    - limit-conn                     # priority: 1003
    - limit-count                    # priority: 1002
    - limit-req                      # priority: 1001
    #- node-status                   # priority: 1000
    - gzip                           # priority: 995
    - server-info                    # priority: 990
    - traffic-split                  # priority: 966
    - redirect                       # priority: 900
    - response-rewrite               # priority: 899
    #- dubbo-proxy                   # priority: 507
    - grpc-transcode                 # priority: 506
    - grpc-web                       # priority: 505
    - public-api                     # priority: 501
    - prometheus                     # priority: 500
    - datadog                        # priority: 495
    - echo                           # priority: 412
    - loggly                         # priority: 411
    - http-logger                    # priority: 410
    - splunk-hec-logging             # priority: 409
    - skywalking-logger              # priority: 408
    - google-cloud-logging           # priority: 407
    - sls-logger                     # priority: 406
    - tcp-logger                     # priority: 405
    - kafka-logger                   # priority: 403
    - rocketmq-logger                # priority: 402
    - syslog                         # priority: 401
    - udp-logger                     # priority: 400
    - file-logger                    # priority: 399
    - clickhouse-logger              # priority: 398
    #- log-rotate                    # priority: 100
    # <- recommend to use priority (0, 100) for your custom plugins
    - example-plugin                 # priority: 0
    - aws-lambda                     # priority: -1899
    - azure-functions                # priority: -1900
    - openwhisk                      # priority: -1901
    - serverless-post-function       # priority: -2000
    - ext-plugin-post-req            # priority: -3000

  plugin_attr:
    skywalking:
      endpoint_addr: http://skywalking-oap.skywalking:12800

podMonitor:
  enabled: true
  namespace: ingress-apisix

apisix-dashboard:
  ingress:
    enabled: "true"
    annotations:
      kubernetes.io/ingress.class: apisix
      k8s.apisix.apache.org/upstream-protocol: grpc
      # cert-manager.io/cluster-issuer: "letsencrypt"
      # kubernetes.io/tls-acme: "true"
      # k8s.apisix.apache.org/http-to-https: "true"
      # k8s.apisix.apache.org/enable-cors: "true"
    ingressClassName: apisix
    hosts:
      - host: apisix-dashboard.dickens.top
        paths:
          - /
    # tls:
    # - hosts:
    #     - apisix-dashboard.dickens.top # placing a host in the TLS config will determine what ends up in the cert's subjectAltNames
    #   secretName: apisix-dashboard-tls

apisix-ingress-controller:
  config:
    apisix:
      adminKey: ccuOrnnKFvyF4aA9
    ingressPublishService: "ingress-apisix/apisix"
    # kubernetes:
    #   namespaceSelector:
    #     - apisix.ingress=watching

gateway:
  type: ClusterIP
  tls:
    enabled: true

etcd:
  enabled: true
  replicaCount: 1
  metrics:
    podMonitor:
      enabled: true
      namespace: ingress-apisix # default monitoring
    prometheusRule:
      enabled: true
      # namespace: monitoring
      role:
        - alert: EtcdClusterUnavailable
          annotations:
            summary: etcd cluster small
            description: If one more etcd peer goes down the cluster will be unavailable
          expr: |
            count(up{job="etcd"} == 0) > (count(up{job="etcd"}) / 2 - 1)
          for: 3m
          labels:
            severity: critical
