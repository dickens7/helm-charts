#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

replicaCount: 1
image:
  repository: apache/apisix
  pullPolicy: IfNotPresent
  tag: "2.10.1-alpine"
  pullSecrets: []

version: v1

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

gateway:
  type: ClusterIP
  #type: LoadBalancer
  # annotations:
  #   service.beta.kubernetes.io/aws-load-balancer-type: nlb
  http:
    enabled: true
    servicePort: 80
    containerPort: 9080
    #nodePort: 39080
  http2:
    enabled: true
    servicePort: 9083
    containerPort: 9083
    #nodePort: 39083
  tls:
    enabled: false
    servicePort: 443
    containerPort: 9443
     #nodePort: 39443
    http2:
      enabled: true

apisixConfig:
  apisix:
    enable_debug: true
  etcd:
    host:
      - http://etcd-headless:2379
    prefix: "/apisix"
    timeout: 30
    # user: root
    # password: password
    tls:
      verify: false
  nginx_config:
    error_log: /dev/stdout
    error_log_level: warn
    worker_processes: "1"
    http:
      access_log: /dev/stdout
      real_ip_from: 
        - 10.0.0.0/8
        - 192.168.0.0/12
        - 172.16.0.0/12
  plugins:                          # plugin list (sorted by priority)
    - client-control                 # priority: 22000
    - ext-plugin-pre-req             # priority: 12000
    - zipkin                         # priority: 11011
    - request-id                     # priority: 11010
    - fault-injection                # priority: 11000
    - serverless-pre-function        # priority: 10000
    - batch-requests                 # priority: 4010
    - cors                           # priority: 4000
    - ip-restriction                 # priority: 3000
    - ua-restriction                 # priority: 2999
    - referer-restriction            # priority: 2990
    - uri-blocker                    # priority: 2900
    - request-validation             # priority: 2800
    - openid-connect                 # priority: 2599
    - wolf-rbac                      # priority: 2555
    - hmac-auth                      # priority: 2530
    - basic-auth                     # priority: 2520
    - jwt-auth                       # priority: 2510
    - key-auth                       # priority: 2500
    - consumer-restriction           # priority: 2400
    - authz-keycloak                 # priority: 2000
    - error-log-logger               # priority: 1091
    - proxy-mirror                   # priority: 1010
    - proxy-cache                    # priority: 1009
    - proxy-rewrite                  # priority: 1008
    - api-breaker                    # priority: 1005
    - limit-conn                     # priority: 1003
    - limit-count                    # priority: 1002
    - limit-req                      # priority: 1001
    #- node-status                   # priority: 1000
    - gzip                           # priority: 995
    - server-info                    # priority: 990
    - traffic-split                  # priority: 966
    - redirect                       # priority: 900
    - response-rewrite               # priority: 899
    #- dubbo-proxy                   # priority: 507
    - grpc-transcode                 # priority: 506
    - prometheus                     # priority: 500
    - echo                           # priority: 412
    - http-logger                    # priority: 410
    - sls-logger                     # priority: 406
    - tcp-logger                     # priority: 405
    - kafka-logger                   # priority: 403
    - syslog                         # priority: 401
    - udp-logger                     # priority: 400
    #- log-rotate                    # priority: 100
    # <- recommend to use priority (0, 100) for your custom plugins
    - example-plugin                 # priority: 0
    # - skywalking                     # priority: -1100
    - serverless-post-function       # priority: -2000
    - ext-plugin-post-req            # priority: -3000

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  # cpu: 1000m
  # memory: 256Mi
  requests:
    cpu: 0m
    memory: 0Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

apisix-dashboard:
  enabled: true
  fullnameOverride: "apisix-dashboard"
  config:
    etcd:
      endpoints:
        - etcd-headless:2379
  apisixControl: "http://apisix-internal:9090"

apisix-ingress-controller:
  enabled: true
  nameOverride: ingress
  config:
    logLevel: "warn"
    enableProfiling: false
    kubernetes:
      appNamespaces: ["*"]
    apisix:
      serviceName: apisix-internal
      serviceNamespace: ingress-apisix
      servicePort: 9180
      adminKey: "edd1c9f034335f136f87ad84b625c8f1"

etcd:
  enabled: true
  fullnameOverride: "etcd"
  auth:
    rbac:
      enabled: false
      rootPassword: root
  persistence:
    size: 2Gi
